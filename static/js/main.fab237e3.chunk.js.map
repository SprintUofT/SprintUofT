{"version":3,"sources":["Icons/Facebook_Logo.svg","Icons/Email_Logo.svg","Icons/Pink_Cloud.svg","components/home/introPara.js","components/home/introText.js","components/contactList.js","serviceWorker.js","index.js","App.js","Icons/Logo.svg","Icons/Blue_Cloud.svg","Icons/LinkedIn_Logo.svg"],"names":["module","exports","IntroPara","props","className","heading","text","introText","ContactList","href","facebook","src","require","alt","linkedin","email","Boolean","window","location","hostname","match","ReactDOM","render","isMobile","innerWidth","pinkCloudStyle","width","height","marginLeft","position","bottom","left","blueCloudStyle","right","top","pinkCloud","style","botRow","md","overflow","id","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"oFAAAA,EAAOC,QAAU,IAA0B,2C,mBCA3CD,EAAOC,QAAU,IAA0B,wC,mBCA3CD,EAAOC,QAAU,IAA0B,wC,sNCG5B,SAASC,EAAUC,GAK9B,OACI,yBAAKC,UAAU,cACX,kBAAC,MAAD,KACI,kBAAC,MAAD,KACI,6BACI,gCAAMD,EAAME,QAAZ,KACA,+BAAKF,EAAMG,KAAX,SCVT,SAASC,IACpB,OACI,kBAAC,YAAD,KACI,kBAACL,EAAD,CACIG,QAAQ,aACRC,KAAK,2IAIT,kBAACJ,EAAD,CACIG,QAAQ,cACRC,KAAK,gLAIT,kBAACJ,EAAD,CACIG,QAAQ,YACRC,KAAK,oNCnBN,SAASE,EAAYL,GAEhC,OACA,wBAAIC,UAAU,gBACV,4BACI,uBAAGK,KAAMN,EAAMO,UACf,yBAAKC,IAAKC,EAAQ,IAA+BC,IAAI,eAGzD,4BACI,uBAAGJ,KAAMN,EAAMW,UACf,yBAAKH,IAAKC,EAAQ,GAA+BC,IAAI,eAGzD,4BACI,uBAAGJ,KAAMN,EAAMY,OACf,yBAAKJ,IAAKC,EAAQ,IAA4BC,IAAI,aCN1CG,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,mBCWD,WACb,IAAMC,EAAWN,OAAOO,YAAc,IAEhCC,EAAmBF,EAQvB,CACEG,MAAO,OACPC,OAAQ,OACRC,WAAY,QAVd,CACEF,MAAO,OACPC,OAAQ,OACRE,SAAU,WACVC,OAAQ,MACRC,KAAM,QAQJC,EAAkBT,EAAY,CAClCG,MAAO,MACPC,OAAQ,OACRE,SAAU,WACVI,MAAO,OACPC,IAAK,SACH,CACFR,MAAO,MACPC,OAAQ,MACRE,SAAU,WACVK,IAAK,OACLD,MAAO,QAGHE,EACJ,yBAAMxB,IAAKC,EAAQ,IACbC,IAAI,aACJuB,MAAOX,IAGTY,EAAUd,EAEd,kBAAC,MAAD,KACE,kBAAC,MAAD,CAAKe,GAAI,GAAT,KAAc,kBAAC,EAAD,MAAd,KACA,kBAAC,MAAD,CAAKA,GAAI,GAAT,KAAeH,EAAf,MAIF,kBAAC,MAAD,KACE,kBAAC,MAAD,CAAKG,GAAI,GAAT,KAAeH,EAAf,KACA,kBAAC,MAAD,CAAKG,GAAI,GAAT,KAAc,kBAAC,EAAD,MAAd,MAIJ,OACE,yBAAKlC,UAAU,MAAMgC,MAAO,CAACG,SAAU,WAcnC,kBAAC,YAAD,KACE,kBAAC,MAAD,KACE,kBAAC,MAAD,CAAKD,GAAI,GAEP,yBAAKE,GAAG,OAAO7B,IAAKC,EAAQ,GAAqBC,IAAI,SACrD,wBAAIT,UAAU,UAAd,qCAGA,kBAACI,EAAD,CACEE,SAAS,wBACTI,SAAS,wBACTC,MAAM,4BAYZ,yBAAKJ,IAAKC,EAAQ,GAA2BC,IAAI,eAAeuB,MAAOJ,IACtEK,MDrGK,MAASI,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,iB,kBGrInBhD,EAAOC,QAAU,IAA0B,kC,kBCA3CD,EAAOC,QAAU,IAA0B,wC,kBCA3CD,EAAOC,QAAU,IAA0B,4C","file":"static/js/main.fab237e3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Facebook_Logo.c6c3fd72.svg\";","module.exports = __webpack_public_path__ + \"static/media/Email_Logo.64784f4c.svg\";","module.exports = __webpack_public_path__ + \"static/media/Pink_Cloud.a29f2c11.svg\";","import React from 'react';\r\nimport {Row, Col} from 'react-grid-system';\r\n\r\nexport default function IntroPara(props){\r\n    // let paraStyle = {\r\n\r\n    // };\r\n\r\n    return(\r\n        <div className=\"intro-para\">\r\n            <Row>\r\n                <Col>\r\n                    <div>\r\n                        <h3> {props.heading} </h3>\r\n                        <p> {props.text} </p>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        </div>    \r\n    );\r\n}","import React from 'react';\r\nimport {Container} from 'react-grid-system';\r\nimport IntroPara from './introPara';\r\n\r\nexport default function introText(){\r\n    return(\r\n        <Container>\r\n            <IntroPara \r\n                heading=\"Our Vision\"\r\n                text=\"To foster a tech community at the University of Toronto \r\n                that creates proficient and competitive candidates for the\r\n                tech industry.\"\r\n            />\r\n            <IntroPara \r\n                heading=\"Our Mission\"\r\n                text=\"To accelerate student tech careers in Product Management,\r\n                Software Engineering, and UI/UX Design through keynote tech talks,\r\n                mentored events, and information sessions.\"\r\n            />\r\n            <IntroPara \r\n                heading=\"Our Story\"\r\n                text=\"We're a dedicated team of students who strive to reach our\r\n                highest potential in the tech industry! We believe that anyone can\r\n                break into a tech career with exposure to the right resources and\r\n                network.\"\r\n            />\r\n\r\n        </Container>\r\n    );\r\n}","import React from 'react';\r\n\r\nexport default function ContactList(props) {\r\n\r\n    return (\r\n    <ul className=\"contact-list\">\r\n        <li>\r\n            <a href={props.facebook}>\r\n            <img src={require('../Icons/Facebook_Logo.svg')} alt=\"facebook\"/>\r\n            </a>\r\n        </li>\r\n        <li>\r\n            <a href={props.linkedin}>\r\n            <img src={require('../Icons/LinkedIn_Logo.svg')} alt=\"linkedin\"/>\r\n            </a>\r\n        </li>\r\n        <li>\r\n            <a href={props.email}>\r\n            <img src={require('../Icons/Email_Logo.svg')} alt=\"email\"/>\r\n            </a>\r\n        </li>\r\n    </ul>\r\n    );\r\n}","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import React from 'react';\r\nimport Logo from './Icons/Logo.svg';\r\nimport BlueCloud from './Icons/Blue_Cloud.svg';\r\nimport LinkedIn from './Icons/LinkedIn_Logo.svg';\r\nimport Facebook from './Icons/Facebook_Logo.svg';\r\nimport Email from './Icons/Email_Logo.svg';\r\nimport PinkCloud from './Icons/Pink_Cloud.svg';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './App.css'; \r\n// import Container from 'react-bootstrap/Container';\r\n// import Col from 'react-bootstrap/Col';\r\n// import Row from 'react-bootstrap/Row';\r\nimport Text from './components/home/introText';\r\nimport {Container, Row, Col} from 'react-grid-system';\r\nimport './App.css';\r\nimport ContactList from './components/contactList';\r\n\r\nexport default function App() {\r\n  const isMobile = window.innerWidth <= 480;\r\n\r\n  const pinkCloudStyle = (!isMobile) ? \r\n    {\r\n      width: '100%', \r\n      height: '100%', \r\n      position: 'absolute',\r\n      bottom: '-5%',\r\n      left: '-20%'\r\n    }:\r\n    {\r\n      width: '100%', \r\n      height: '100%',\r\n      marginLeft: '-20%'\r\n    };\r\n\r\n  const blueCloudStyle = (isMobile) ? {\r\n    width: '60%', \r\n    height: 'auto',\r\n    position: 'absolute',\r\n    right: '-15%',\r\n    top: '12.5%'\r\n  } : {\r\n    width: '50%', \r\n    height: '50%',\r\n    position: 'absolute',\r\n    top: '-10%',\r\n    right: '-10%'\r\n  }\r\n\r\n  const pinkCloud = (\r\n    <img  src={require('./Icons/Pink_Cloud.svg')} \r\n          alt=\"board icon\" \r\n          style={pinkCloudStyle}/>\r\n  );\r\n\r\n  const botRow = (isMobile) ? (\r\n    //mobile\r\n    <Row>\r\n      <Col md={5}>  <Text/> </Col>\r\n      <Col md={7}>  {pinkCloud} </Col>\r\n    </Row>\r\n  ):(\r\n    //desktop\r\n    <Row>\r\n      <Col md={6}>  {pinkCloud} </Col>\r\n      <Col md={6}>  <Text/> </Col>\r\n    </Row>\r\n  );\r\n\r\n  return (\r\n    <div className=\"App\" style={{overflow: 'hidden'}}>    \r\n            {/* <Row>\r\n              <Col sm={4}><img src={Logo} style={{width: \"100%\", height:\"auto\"}} alt=\"\"/><h1>Accelerating Student Tech Careers</h1></Col>\r\n              <Col sm={8}><img src={BlueCloud} style={{width: \"100%\", height:\"auto\"}} alt=\"\"/></Col>\r\n            </Row>\r\n            <Row>\r\n              <Col sm={4}><img src ={Facebook} alt=\"\"></img><img src ={LinkedIn} alt=\"\"></img><img src ={Email} alt=\"\"></img></Col>\r\n            </Row>\r\n            <Row>\r\n              <Col sm={6}><img src={PinkCloud} style={{width: \"100%\", height:\"auto\"}}  alt=\"\"/></Col>\r\n            </Row> */}\r\n      \r\n\r\n      {/* <div style={{overflow: 'hidden'}}> */}\r\n        <Container>\r\n          <Row>\r\n            <Col md={8}>\r\n              {/* Logo and Slogan */}\r\n              <img id=\"logo\" src={require('./Icons/Logo.svg')} alt=\"logo\"/>\r\n              <h1 className=\"slogan\">\r\n                Accelerating Student Tech Careers\r\n              </h1>\r\n              <ContactList \r\n                facebook=\"https://www.google.ca\"\r\n                linkedin=\"https://www.google.ca\"\r\n                email=\"https://www.google.ca\" />\r\n            </Col>\r\n            {/* <Col md={4}>\r\n              <div style={{\r\n                position: 'relative',\r\n                width: '100%',\r\n                height: '50%'\r\n              }}>\r\n                <img src={require('./Icons/Blue_Cloud.svg')} alt=\"working icon\" style={blueCloudStyle} />\r\n              </div>\r\n            </Col> */}\r\n          </Row>\r\n          <img src={require('./Icons/Blue_Cloud.svg')} alt=\"working icon\" style={blueCloudStyle} />\r\n          {botRow}\r\n        </Container>\r\n      </div>\r\n    );\r\n}\r\n","module.exports = __webpack_public_path__ + \"static/media/Logo.84f0d948.svg\";","module.exports = __webpack_public_path__ + \"static/media/Blue_Cloud.cfdf1e9c.svg\";","module.exports = __webpack_public_path__ + \"static/media/LinkedIn_Logo.976b193e.svg\";"],"sourceRoot":""}